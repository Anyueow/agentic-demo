#!/usr/bin/env python3
"""
Helper script to set up environment variables for the ABM Lead Gen system.
This will guide you through creating the .env file.
"""

import os
import sys
from pathlib import Path

def setup_env_file():
    """Interactive setup for .env file"""
    print("🔧 ABM Lead Gen Environment Setup")
    print("=" * 50)
    print()
    
    env_file = Path(".env")
    
    # Check if .env already exists
    if env_file.exists():
        print("⚠️  .env file already exists")
        overwrite = input("Do you want to overwrite it? (y/n): ").lower()
        if overwrite != 'y':
            print("Exiting without changes.")
            return
        print()
    
    print("Please provide the following information:")
    print()
    
    # Get Google credentials path
    print("1. 📁 Google Service Account JSON Key")
    print("   This is the JSON file you downloaded from Google Cloud Console")
    default_creds = "./service-account-key.json"
    creds_path = input(f"   Path to your JSON key file [{default_creds}]: ").strip()
    if not creds_path:
        creds_path = default_creds
    
    # Convert to absolute path
    creds_path = os.path.abspath(creds_path)
    
    # Check if the file exists
    if not os.path.exists(creds_path):
        print(f"   ⚠️  Warning: File '{creds_path}' not found")
        print(f"   Make sure to place your JSON key file at this location")
    print()
    
    # Get spreadsheet ID
    print("2. 📊 Google Spreadsheet ID")
    print("   This is the long ID from your Google Sheet URL")
    print("   Example: https://docs.google.com/spreadsheets/d/1AbCdEfG.../edit")
    print("                                                    ^^^^^^^^")
    spreadsheet_id = input("   Spreadsheet ID: ").strip()
    
    if not spreadsheet_id:
        print("   ❌ Spreadsheet ID is required!")
        return
    print()
    
    # Get worksheet name
    print("3. 📋 Worksheet Name")
    default_worksheet = "Leads"
    worksheet_name = input(f"   Worksheet/tab name [{default_worksheet}]: ").strip()
    if not worksheet_name:
        worksheet_name = default_worksheet
    print()
    
    # Optional: Textfully API key
    print("4. 📱 Textfully API Key (optional)")
    print("   If you have a Textfully account for SMS/email")
    textfully_key = input("   Textfully API key [leave blank to skip]: ").strip()
    print()
    
    # Optional: Verification API key
    print("5. ✅ Verification API Key (optional)")
    print("   For email verification (Hunter.io, ZeroBounce, etc.)")
    verify_key = input("   Verification API key [leave blank to skip]: ").strip()
    print()
    
    # Optional: From email
    print("6. 📧 From Email (optional)")
    print("   Email address to use as sender")
    from_email = input("   From email [leave blank to skip]: ").strip()
    print()
    
    # Optional: Hugging Face token
    print("7. 🤗 Hugging Face Token (optional)")
    print("   For using smolagents with Hugging Face models")
    hf_token = input("   HF token [leave blank to skip]: ").strip()
    print()
    
    # Write the .env file
    try:
        with open(".env", "w") as f:
            f.write("# ABM Lead Generation Environment Variables\n")
            f.write("# Generated by setup_env.py\n\n")
            
            f.write("# Google Sheets Configuration\n")
            f.write(f"GOOGLE_APPLICATION_CREDENTIALS={creds_path}\n")
            f.write(f"SPREADSHEET_ID={spreadsheet_id}\n")
            f.write(f"WORKSHEET_NAME={worksheet_name}\n\n")
            
            if textfully_key:
                f.write("# Textfully API\n")
                f.write(f"TEXTFULLY_API_KEY={textfully_key}\n\n")
            
            if verify_key:
                f.write("# Email Verification\n")
                f.write(f"VERIFY_API_KEY={verify_key}\n\n")
            
            if from_email:
                f.write("# Email Configuration\n")
                f.write(f"FROM_EMAIL={from_email}\n\n")
            
            if hf_token:
                f.write("# Hugging Face\n")
                f.write(f"HF_TOKEN={hf_token}\n\n")
        
        print("✅ Successfully created .env file!")
        print()
        print("📝 Next steps:")
        print("1. Make sure your Google Service Account JSON key is at:")
        print(f"   {creds_path}")
        print("2. Verify your Google Sheet is shared with the service account")
        print("3. Run 'python test_sheets_setup.py' to test the connection")
        print()
        
        # Show the created file contents
        print("📄 Created .env file contents:")
        print("-" * 30)
        with open(".env", "r") as f:
            print(f.read())
            
    except Exception as e:
        print(f"❌ Error creating .env file: {e}")

def main():
    if len(sys.argv) > 1 and sys.argv[1] == "--help":
        print("Usage: python setup_env.py")
        print("Interactive setup for ABM Lead Gen environment variables")
        return
    
    setup_env_file()

if __name__ == "__main__":
    main() 